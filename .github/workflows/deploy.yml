name: üöÄ Deploy to EC2 OCTAVIEW SERVER

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose-plugin

    - name: Deploy to EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        set -e  # Exit immediately if a command fails
        echo "‚úÖ Connected to EC2"
        echo "‚ö° Checking the deployment directory..."
        echo "üî® Building the project..."
        npm run build
        echo "üõë Stopping and removing old containers..."
        if ! docker compose down; then
          echo "‚ö†Ô∏è Failed to stop containers. Ignoring error..."
        fi
        echo "üßπ Removing unused Docker resources..."
        if ! docker system prune -af --volumes; then
          echo "‚ö†Ô∏è Failed to prune Docker resources. Ignoring error..."
        fi
        echo "üîÑ Building and restarting containers..."
        if ! docker compose up --build -d; then
          echo "‚ùå Failed to build and start containers. Exiting..."
          exit 1
        fi
        echo "üåê Restarting Nginx..."
        if ! sudo systemctl restart nginx; then
          echo "‚ö†Ô∏è Failed to restart Nginx. Ignoring error..."
        fi
        echo "‚úÖ Deployment complete!"