name: 🚀 Deploy to EC2 OCTAVIEW SERVER

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 🚀 Checkout code
        uses: actions/checkout@v3

      - name: 🔑 Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e  # Exit immediately if a command fails
            echo "✅ Connected to EC2"

            # Ensure deployment directory exists
            if [ ! -d "/home/ubuntu/OCTAVIEW" ]; then
              mkdir -p /home/ubuntu/OCTAVIEW
            fi
            cd /home/ubuntu/OCTAVIEW

            echo "⚡ Pulling latest code from GitHub..."
            if [ ! -d ".git" ]; then
              git init
              git remote add origin https://github.com/Octaview-b2b/OCTAVIEW.git
            else
              git remote set-url origin https://github.com/Octaview-b2b/OCTAVIEW.git
            fi
            git fetch --all
            git reset --hard origin/master
            git checkout -f master
            git pull origin master

            # Ensure Node.js and npm are installed
            echo "📦 Checking Node.js and npm..."
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            echo "✅ Node.js $(node -v) and npm $(npm -v) installed!"

            # Install dependencies only if package.json changes
            echo "📦 Installing dependencies..."
            npm ci --no-fund --no-audit

            # Build project
            echo "🔨 Building the project..."
            npm run build

            # Ensure Docker is installed
            echo "🐳 Checking Docker..."
            if ! command -v docker &> /dev/null; then
              echo "🔧 Installing Docker..."
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker ubuntu
            fi

            # Ensure Docker Compose is installed
            echo "🛠️ Checking Docker Compose..."
            if ! command -v docker-compose &> /dev/null; then
              echo "🔧 Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            echo "✅ Docker $(docker -v) and Docker Compose $(docker-compose -v) installed!"

            # Stop and remove old containers
            echo "🛑 Stopping and removing old containers..."
            docker compose down || true

            # Clean up unused Docker resources
            echo "🧹 Cleaning up Docker..."
            docker system prune -af || true

            # Ensure correct Docker image name
            IMAGE_NAME="octaview-server"
            CONTAINER_NAME="octaview-server"

            # Build and start containers
            echo "🔄 Building and restarting containers..."
            docker compose up --build -d

            echo "🚀 Deployment successful!"
